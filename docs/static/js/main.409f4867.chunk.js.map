{"version":3,"sources":["components/Player/Player.js","components/TextFrame/TextFrame.js","components/SearchBar/SearchBar.js","components/ScrollBar/ScrollBar.js","components/EmotionsMap/EmotionsMap.js","components/GeoMap/GeoMap.js","App.js","reportWebVitals.js","index.js"],"names":["Player","props","state","playStatus","Sound","status","STOPPED","prevProps","this","setState","nextProps","e","console","log","description","className","url","onError","handleError","autoLoad","React","Component","TextFrame","updateChapter","contentHeight","containerRef","current","scrollTop","id","i","chaptersTops","length","setActive","setScrollPos","content","contentScroll","height","document","getElementById","offsetHeight","screenHeight","scrollPercentage","moveToNextChapter","activeId","moveToPreviousChapter","playButtonClicked","isPlaying","createRef","addEventListener","Array","prototype","slice","call","getElementsByClassName","map","chapter","offsetTop","chapterIndex","targetSentenceIndex","chapters","headerIndices","hoverId","getSentenceElement","scrollIntoView","heightFract","scrollTo","top","textSpan","index","date","sentences","place","song","artist","isActive","searchIndices","sentencesDivs","sentence","j","spanClass","activeSentence","dateString","day","month","year","playState","PLAYING","iconType","onClick","city","country","ref","SearchBar","handleKeyPress","event","key","onSearch","text","activeIcon","handleSearchClick","target","value","searchClass","type","onChange","textChanged","onKeyPress","ScrollBar","scrollBarClicked","clientY","window","innerHeight","setHeightFract","markerPos","totalHeight","markers","Object","keys","style","onMouseDown","scrollPos","emotionsDict","coord","offset","hebrewLabel","center","EmotionsMap","produceEmotionsLabels","x","y","calculatePosition","emotions","position","counter","countNonZero","calculatePositionForEmotion","percentage","addition","divider","emotionsLabels","chapterDots","headerEmotions","wordsCount","circleClasses","cx","cy","r","onMouseEnter","setHover","onMouseOut","data-name","xmlns","width","viewBox","d","GeoMap","buildClasses","markersClasses","zoom","geography","geographies","geo","rsmKey","coordinates","Math","min","data","require","searchFile","searchDict","App","handleSearch","string","normalizedForm","search","prevHoverId","produceEmotionsString","emotionsString","realType","find","emotion","parseInt","chaptersList","hoverChapter","right","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.409f4867.chunk.js","sourcesContent":["import React from \"react\";\nimport Sound from \"react-sound\";\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playStatus: Sound.status.STOPPED,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.playStatus !== prevProps.playStatus) {\n      this.setState({\n        playStatus: this.props.playStatus,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.playStatus !== this.props.playStatus) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleError(e) {\n    console.log(e);\n    console.log(e.description);\n  }\n\n  render() {\n    return (\n      <div className=\"player\">\n        <Sound\n          url={this.props.url}\n          playStatus={this.props.playStatus}\n          onError={(e) => this.handleError(e)}\n          autoLoad={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React from \"react\";\nimport \"./TextFrame.scss\";\nimport Sound from \"react-sound\";\nimport Player from \"../Player/Player\";\n\nclass TextFrame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = React.createRef();\n    this.state = {\n      isPlaying: false,\n      chaptersTops: [],\n    };\n  }\n\n  updateChapter = () => {\n    const content = this.containerRef.current;\n    const contentHeight = content.scrollTop;\n    var id = 0;\n    for (var i = 1; i < this.state.chaptersTops.length; i++) {\n      if (\n        contentHeight > this.state.chaptersTops[i - 1] &&\n        contentHeight < this.state.chaptersTops[i]\n      ) {\n        id = i - 1;\n        break;\n      }\n    }\n    this.props.setActive(id);\n  };\n\n  componentDidMount() {\n    this.containerRef.current.addEventListener(\"scroll\", this.setScrollPos);\n    const chapters = Array.prototype.slice.call(\n      document.getElementsByClassName(\"chapter\")\n    );\n    const chaptersTops = chapters.map((chapter) => {\n      return chapter.offsetTop;\n    });\n    this.setState({\n      chaptersTops: chaptersTops,\n    });\n  }\n\n  getSentenceElement(chapterIndex) {\n    const targetSentenceIndex =\n      this.props.chapters[chapterIndex].headerIndices.length === 0\n        ? 0\n        : this.props.chapters[this.props.hoverId].headerIndices[0];\n    return document.getElementById(\n      \"chapter\" + this.props.hoverId + \"sentence\" + targetSentenceIndex\n    );\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.activeId != this.props.activeId &&\n      prevProps.hoverId == this.props.activeId\n    ) {\n      const targetSentence = this.getSentenceElement(this.props.activeId);\n      targetSentence.scrollIntoView(true);\n      document.getElementById(\"content\").scrollTop -= 300;\n      this.props.setScrollPos(this.state.chaptersTops[this.props.activeId]);\n    }\n    if (prevProps.heightFract != this.props.heightFract) {\n      const content = this.containerRef.current;\n      content.scrollTo({\n        top:\n          this.props.heightFract *\n          document.getElementById(\"chapter\").offsetHeight,\n        // behavior: \"smooth\",\n      });\n      this.updateChapter();\n    }\n  }\n\n  setScrollPos = () => {\n    const content = this.containerRef.current;\n    const contentScroll = content.scrollTop;\n    const height = document.getElementById(\"chapter\").offsetHeight;\n    const screenHeight = content.offsetHeight;\n    const scrollPercentage = contentScroll / height;\n    this.props.setScrollPos(\n      ((contentScroll + scrollPercentage * screenHeight) / height) * 100\n    );\n    const moveToNextChapter =\n      this.props.activeId < this.state.chaptersTops.length - 3 &&\n      contentScroll > this.state.chaptersTops[this.props.activeId + 1] &&\n      contentScroll < this.state.chaptersTops[this.props.activeId + 2];\n\n    const moveToPreviousChapter =\n      this.props.activeId > 1 &&\n      contentScroll > this.state.chaptersTops[this.props.activeId - 1] &&\n      contentScroll < this.state.chaptersTops[this.props.activeId];\n    if (moveToNextChapter) {\n      this.props.setActive(this.props.activeId + 1);\n    }\n    if (moveToPreviousChapter) {\n      this.props.setActive(this.props.activeId - 1);\n    }\n  };\n\n  playButtonClicked = () => {\n    this.setState({\n      isPlaying: !this.state.isPlaying,\n    });\n  };\n\n  render() {\n    const textSpan = this.props.chapters.map(\n      ({ index, date, sentences, place, song, artist, headerIndices }) => {\n        const isActive = index === this.props.activeId;\n        const searchIndices = this.props.searchIndices[index];\n        const sentencesDivs = sentences.map((sentence, j) => {\n          var spanClass = \"\";\n          if (isActive) {\n            headerIndices.map((activeSentence) => {\n              if (j === activeSentence) {\n                spanClass += \"active\";\n              }\n            });\n          }\n          if (searchIndices) {\n            if (searchIndices[j]) {\n              spanClass += \"searched\";\n            }\n          }\n          return (\n            <span\n              key={j}\n              id={\"chapter\" + index + \"sentence\" + j}\n              className={spanClass}\n            >\n              {sentence.sentence}\n            </span>\n          );\n        });\n\n        const dateString = date.day + \".\" + date.month + \".\" + date.year;\n        var playState =\n          index === this.props.activeId && this.state.isPlaying\n            ? Sound.status.PLAYING\n            : Sound.status.STOPPED;\n        var iconType =\n          playState === Sound.status.PLAYING ? \" fa-pause\" : \" fa-play\";\n        return (\n          <div\n            key={\"chapter\" + index}\n            id={\"chapter\" + index}\n            className=\"chapter\"\n          >\n            <div className=\"sticky\" id={index}>\n              <div className=\"details\">\n                <div>{dateString}</div>\n                <div>\n                  {song + \" | \" + artist}{\" \"}\n                  <i\n                    className={\"fas fa-md icon\" + iconType}\n                    onClick={this.playButtonClicked}\n                  ></i>\n                </div>\n              </div>\n              <div className=\"details\">\n                <div>{place.city + \", \" + place.country}</div>\n                <div></div>\n              </div>\n            </div>\n            <Player\n              key={\"player\" + index}\n              url={\"./sound/\" + song + \".mp3\"}\n              playStatus={playState}\n              id={index}\n            />\n            <div className=\"chapterContent\">{sentencesDivs}</div>\n          </div>\n        );\n      }\n    );\n\n    return (\n      <div className=\"TextFrame\">\n        <div className=\"content\" id=\"content\" ref={this.containerRef}>\n          <div key={\"chapter\"} id={\"chapter\"}>\n            {textSpan}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextFrame;\n","import React from \"react\";\nimport \"./SearchBar.scss\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      activeIcon: false,\n    };\n  }\n\n  textChanged(e) {\n    this.setState({\n      text: e.target.value,\n      activeIcon: false,\n    });\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.props.onSearch(this.state.text);\n      this.setState({\n        activeIcon: true,\n      });\n    }\n  };\n\n  handleSearchClick = () => {\n    this.props.onSearch(this.state.text);\n    this.setState({\n      activeIcon: true,\n    });\n  };\n\n  render() {\n    const searchClass = this.state.activeIcon ? \" active\" : \"\";\n    return (\n      <div className={\"searchContainer\"}>\n        <div\n          className={\"searchIcon\" + searchClass}\n          onClick={this.handleSearchClick}\n        >\n          <i className=\"fas fa-search fa-md\"></i>\n        </div>\n        <input\n          type=\"text\"\n          className=\"search\"\n          value={this.state.text}\n          onChange={(e) => this.textChanged(e)}\n          onKeyPress={this.handleKeyPress}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./ScrollBar.scss\";\n\nclass ScrollBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markerPos: -100,\n      chaptersTops: [],\n    };\n  }\n\n  componentDidMount() {\n    const chapters = Array.prototype.slice.call(\n      document.getElementsByClassName(\"chapter\")\n    );\n    const totalHeight = document.getElementById(\"chapter\").offsetHeight;\n    const chaptersTops = chapters.map((chapter) => {\n      return (chapter.offsetTop / totalHeight) * 100;\n    });\n    this.setState({\n      chaptersTops: chaptersTops,\n    });\n  }\n\n  getSentenceElement(chapterIndex) {\n    const targetSentenceIndex =\n      this.props.chapters[chapterIndex].headerIndices.length === 0\n        ? 0\n        : this.props.chapters[this.props.hoverId].headerIndices[0];\n    return document.getElementById(\n      \"chapter\" + this.props.hoverId + \"sentence\" + targetSentenceIndex\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.hoverId != this.props.hoverId) {\n      var markerPos = -100;\n      if (this.props.hoverId >= 0) {\n        const targetSentence = this.getSentenceElement(this.props.hoverId);\n        markerPos =\n          ((targetSentence.offsetTop - 300) /\n            document.getElementById(\"chapter\").offsetHeight) *\n          100;\n      }\n      this.setState({\n        markerPos: markerPos,\n      });\n    }\n  }\n\n  scrollBarClicked = (e) => {\n    const heightFract = e.clientY / window.innerHeight;\n    this.props.setScrollPos(heightFract * 100);\n    this.props.setHeightFract(heightFract);\n  };\n\n  render() {\n    const markers = Object.keys(this.props.searchIndices).map((i) => {\n      return (\n        <div\n          className=\"marker\"\n          style={{ top: this.state.chaptersTops[i] + \"%\" }}\n        ></div>\n      );\n    });\n    return (\n      <div\n        className=\"scrollBar\"\n        id=\"scrollBar\"\n        onMouseDown={(e) => this.scrollBarClicked(e)}\n      >\n        <div\n          className=\"thumb\"\n          style={{ height: this.props.scrollPos + \"%\" }}\n        ></div>\n\n        <div\n          className=\"marker\"\n          id=\"active\"\n          style={{ top: this.state.markerPos + \"%\" }}\n        ></div>\n        {markers}\n      </div>\n    );\n  }\n}\n\nexport default ScrollBar;\n","import React from \"react\";\nimport \"./EmotionsMap.scss\";\n\nconst emotionsDict = [\n  {\n    type: \"expectation\",\n    coord: [380, 230],\n    offset: [40, -20],\n    hebrewLabel: \"ציפייה\",\n  },\n  {\n    type: \"happiness\",\n    coord: [200, 645],\n    offset: [-20, 20],\n    hebrewLabel: \"אושר\",\n  },\n  {\n    type: \"trust\",\n    coord: [380, 830],\n    offset: [20, 40],\n    hebrewLabel: \"אמון\",\n  },\n  {\n    type: \"fear\",\n    coord: [615, 830],\n    offset: [30, 40],\n    hebrewLabel: \"פחד\",\n  },\n  {\n    type: \"surprise\",\n    coord: [200, 415],\n    offset: [-20, 0],\n    hebrewLabel: \"הפתעה\",\n  },\n  {\n    type: \"sadness\",\n    coord: [615, 230],\n    offset: [40, -20],\n    hebrewLabel: \"עצב\",\n  },\n  {\n    type: \"disgust\",\n    coord: [800, 645],\n    offset: [80, 20],\n    hebrewLabel: \"גועל\",\n  },\n  {\n    type: \"anger\",\n    coord: [800, 415],\n    offset: [80, 0],\n    hebrewLabel: \"כעס\",\n  },\n];\n\nvar center = [0, 0];\nvar emotionsCount = 8;\n\nemotionsDict.map(({ coord }) => {\n  center[0] += coord[0];\n  center[1] += coord[1];\n});\ncenter = [center[0] / emotionsCount, center[1] / emotionsCount];\n\nclass EmotionsMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emotionsLabels: this.produceEmotionsLabels(),\n    };\n  }\n\n  produceEmotionsLabels = () => {\n    return emotionsDict.map(({ type, coord, offset, hebrewLabel }) => {\n      return (\n        <text\n          className=\"label\"\n          key={type}\n          x={coord[0] + offset[0]}\n          y={coord[1] + offset[1]}\n        >\n          {hebrewLabel}\n        </text>\n      );\n    });\n  };\n\n  render() {\n    const chapterDots = this.props.chapters.map(\n      ({ index, headerEmotions, wordsCount }) => {\n        var circleClasses = \"regularDot\";\n        const activeId =\n          this.props.hoverId != -1 ? this.props.hoverId : this.props.activeId;\n        const sentences = this.props.searchIndices[index];\n        if (activeId === index) {\n          circleClasses += \" active\";\n        }\n        if (sentences) {\n          circleClasses += \" searched\";\n        }\n\n        const position = this.calculatePosition(headerEmotions);\n        return (\n          <circle\n            className={circleClasses}\n            key={\"dot\" + index}\n            id={\"dot\" + index}\n            cx={position[0]}\n            cy={position[1]}\n            r={0.01 * wordsCount}\n            onMouseEnter={() => this.props.setHover(index)}\n            onMouseOut={() => this.props.setHover(-1)}\n            onClick={() => this.props.setActive(index)}\n          />\n        );\n      }\n    );\n\n    return (\n      <div className=\"emotionsMap\">\n        <svg\n          id=\"diamonds\"\n          data-name=\"Layer 1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          height=\"450\"\n          width=\"960\"\n          viewBox={\"0 100 900 850\"}\n        >\n          <path\n            className=\"diamond\"\n            d=\"M347.51,807.31,218.82,676.76A84.32,84.32,0,0,1,194.56,617l1.31-183.32A84.31,84.31,0,0,1,221,374.23L351.54,245.54a84.28,84.28,0,0,1,59.78-24.26l183.32,1.31a84.29,84.29,0,0,1,59.43,25.12L782.76,378.26A84.26,84.26,0,0,1,807,438l-1.31,183.31a84.29,84.29,0,0,1-25.12,59.44L650,809.48a84.3,84.3,0,0,1-59.78,24.26L407,832.43A84.34,84.34,0,0,1,347.51,807.31Z\"\n          />\n          {this.state.emotionsLabels}\n          {chapterDots}\n        </svg>\n      </div>\n    );\n  }\n\n  calculatePosition = (emotions) => {\n    var position = [center[0], center[1]];\n    var counter = this.countNonZero(emotions);\n    var i = 0;\n    emotions.map(({ type, value }) => {\n      position = this.calculatePositionForEmotion(\n        position,\n        value,\n        emotionsDict[i].coord,\n        counter\n      );\n      i++;\n    });\n    return position;\n  };\n\n  countNonZero = (emotions) => {\n    var counter = 0;\n    emotions.map(({ value }) => {\n      if (value > 0) {\n        counter++;\n      }\n    });\n    return counter;\n  };\n\n  calculatePositionForEmotion = (position, percentage, addition, divider) => {\n    if (!percentage) {\n      return position;\n    }\n    position[0] += (percentage * (addition[0] - center[0])) / divider;\n    position[1] += (percentage * (addition[1] - center[1])) / divider;\n    return position;\n  };\n}\n\nexport default EmotionsMap;\n","import React from \"react\";\nimport \"./GeoMap.scss\";\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker,\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nclass GeoMap extends React.Component {\n  buildClasses = (activeId, index) => {\n    const sentences = this.props.searchIndices[index];\n    var markersClasses = \"regularDot\";\n    if (activeId === index) {\n      markersClasses += \" active\";\n    }\n    if (sentences) {\n      markersClasses += \" searched\";\n    }\n    return markersClasses;\n  };\n\n  render() {\n    const activeId =\n      this.props.hoverId >= 0 ? this.props.hoverId : this.props.activeId;\n    // const sentences = this.props.searchIndices[index];\n    return (\n      <div className=\"mapContainer\">\n        <ComposableMap width={960} height={540}>\n          <ZoomableGroup zoom={1.2}>\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map((geo) => (\n                  <Geography key={geo.rsmKey} geography={geo} />\n                ))\n              }\n            </Geographies>\n\n            {this.props.chapters.map(({ index, wordsCount, place }) => (\n              <Marker\n                key={\"place\" + index}\n                id={\"place\" + index}\n                coordinates={[place.y, place.x]}\n              >\n                <g className={this.buildClasses(activeId, index)}>\n                  <circle\n                    cx=\"0\"\n                    cy=\"0\"\n                    r={\n                      index === activeId\n                        ? Math.min(0.004 * wordsCount, 3)\n                        : Math.min(0.002 * wordsCount, 2)\n                    }\n                    onMouseEnter={() => this.props.setHover(index)}\n                    onMouseOut={() => this.props.setHover(-1)}\n                    onClick={() => this.props.setActive(index)}\n                  />\n                </g>\n              </Marker>\n            ))}\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    );\n  }\n}\n\nexport default GeoMap;\n","import \"./App.scss\";\nimport React from \"react\";\nimport TextFrame from \"./components/TextFrame/TextFrame\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport ScrollBar from \"./components/ScrollBar/ScrollBar\";\nimport EmotionsMap from \"./components/EmotionsMap/EmotionsMap\";\nimport GeoMap from \"./components/GeoMap/GeoMap\";\n\n// import axios from \"axios\";\n\nvar data = require(\"./data/chapters.json\");\nvar searchFile = require(\"./data/search.json\");\nvar searchDict = require(\"./data/searchDict.json\");\n\nconst emotionsDict = [\n  {\n    type: \"expectation\",\n    coord: [380, 230],\n    offset: [40, -20],\n    hebrewLabel: \"ציפייה\",\n  },\n  {\n    type: \"happiness\",\n    coord: [200, 645],\n    offset: [-20, 20],\n    hebrewLabel: \"אושר\",\n  },\n  {\n    type: \"trust\",\n    coord: [380, 830],\n    offset: [20, 40],\n    hebrewLabel: \"אמון\",\n  },\n  {\n    type: \"fear\",\n    coord: [615, 830],\n    offset: [30, 40],\n    hebrewLabel: \"פחד\",\n  },\n  {\n    type: \"surprise\",\n    coord: [200, 415],\n    offset: [-20, 0],\n    hebrewLabel: \"הפתעה\",\n  },\n  {\n    type: \"sadness\",\n    coord: [615, 230],\n    offset: [40, -20],\n    hebrewLabel: \"עצב\",\n  },\n  {\n    type: \"disgust\",\n    coord: [800, 645],\n    offset: [80, 20],\n    hebrewLabel: \"גועל\",\n  },\n  {\n    type: \"anger\",\n    coord: [800, 415],\n    offset: [80, 0],\n    hebrewLabel: \"כעס\",\n  },\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chaptersList: [],\n      chapterIndex: 0,\n      searchIndices: {},\n      activeId: 0,\n      hoverId: -1,\n      prevHoverId: 0,\n      scrollPos: 0,\n      heightFract: 0,\n    };\n  }\n\n  handleSearch = (string) => {\n    const normalizedForm = searchDict[string];\n    console.log(\n      \"searching for \" + string + \", normalized form: \" + normalizedForm\n    );\n    var searchIndices = {};\n    if (normalizedForm) {\n      searchIndices = searchFile.search[normalizedForm];\n    }\n    this.setState({\n      searchIndices: searchIndices,\n    });\n    // this.setState({\n    //   searchIndices: searchFile\n    // })\n    // this.setState({\n    //   searchWord: strippedString,\n    // });\n    // const data = {\n    //   token: \"dged4QyCapbDPlo\",\n    //   type: \"SEARCH\",\n    //   words: [string],\n    // };\n\n    // axios\n    //   .post(\"https://hebrew-nlp.co.il/service/Morphology/Normalize\", data)\n    //   .then((response) => {\n    //     console.log(response.data);\n    //   });\n  };\n\n  setActive = (id) => {\n    this.setState({\n      activeId: id,\n    });\n  };\n\n  setHover = (id) => {\n    if (id > -1) {\n      this.setState({\n        hoverId: id,\n      });\n    } else {\n      this.setState({\n        prevHoverId: this.state.hoverId,\n        hoverId: id,\n      });\n    }\n  };\n\n  produceEmotionsString = (emotions) => {\n    var emotionsString = \"\";\n    emotionsDict.map(({ type, hebrewLabel }) => {\n      const realType = type === \"happiness\" ? \"happy\" : type;\n      const value = emotions.find((emotion) => emotion.type === realType).value;\n      if (value > 0) {\n        emotionsString += hebrewLabel + \": \" + parseInt(value * 100) + \"%, \";\n      }\n    });\n    return emotionsString.slice(0, -2);\n  };\n\n  setScrollPos = (scrollPos) => {\n    this.setState({\n      scrollPos: scrollPos,\n    });\n  };\n\n  setHeightFract = (heightFract) => {\n    this.setState({\n      heightFract: heightFract,\n    });\n  };\n  render() {\n    const hoverChapter =\n      this.state.hoverId == -1\n        ? data.chapters[this.state.prevHoverId]\n        : data.chapters[this.state.hoverId];\n    return (\n      <div>\n        <div className=\"GraphFrame map\">\n          <GeoMap\n            chapters={data.chapters}\n            activeId={this.state.activeId}\n            setActive={this.setActive}\n            setHover={this.setHover}\n            hoverId={this.state.hoverId}\n            searchIndices={this.state.searchIndices}\n          />\n        </div>\n        <div className=\"EmotionsFrame\">\n          <EmotionsMap\n            chapters={data.chapters}\n            activeId={this.state.activeId}\n            setActive={this.setActive}\n            setHover={this.setHover}\n            hoverId={this.state.hoverId}\n            searchIndices={this.state.searchIndices}\n          />\n          <SearchBar onSearch={this.handleSearch} />\n          <div\n            className={\"hoverBox\"}\n            id=\"hoverBox\"\n            style={{\n              right:\n                this.state.hoverId === -1 ||\n                this.state.hoverId === this.state.activeId\n                  ? -200 + \"px\"\n                  : 0,\n            }}\n          >\n            <div className=\"hoverEmotions\" id=\"hoverEmotions\">\n              {this.produceEmotionsString(hoverChapter.headerEmotions)}\n            </div>\n            <div className=\"hoverHeader\" id=\"hoverHeader\">\n              {hoverChapter.header}\n            </div>\n            <div className=\"hoverDate\" id=\"hoverDate\">\n              {hoverChapter.date.day +\n                \".\" +\n                hoverChapter.date.month +\n                \".\" +\n                hoverChapter.date.year}\n            </div>\n            <div className=\"hoverPlace\" id=\"hoverPlace\">\n              {hoverChapter.place.city + \", \" + hoverChapter.place.country}\n            </div>\n          </div>\n        </div>\n        <TextFrame\n          chapters={data.chapters}\n          onSearch={this.handleSearch}\n          setActive={this.setActive}\n          activeId={this.state.activeId}\n          hoverId={this.state.hoverId}\n          searchIndices={this.state.searchIndices}\n          setScrollPos={this.setScrollPos}\n          heightFract={this.state.heightFract}\n        />\n        <ScrollBar\n          chapters={data.chapters}\n          hoverId={this.state.hoverId}\n          scrollPos={this.state.scrollPos}\n          setScrollPos={this.setScrollPos}\n          searchIndices={this.state.searchIndices}\n          setHeightFract={this.setHeightFract}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}